{
  "_args": [
    [
      "LeadsheetJS@git+https://github.com/SonyCSL-Paris/LeadsheetJS.git#master",
      "/home/dani/www/jekyll-sonycsl-site"
    ]
  ],
  "_from": "git+https://github.com/SonyCSL-Paris/LeadsheetJS.git#master",
  "_id": "LeadsheetJS@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/LeadsheetJS",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/SonyCSL-Paris/LeadsheetJS/master/package.json",
      "gitUrl": "git://github.com/SonyCSL-Paris/LeadsheetJS.git#master",
      "httpsUrl": "git+https://github.com/SonyCSL-Paris/LeadsheetJS.git#master",
      "shortcut": "github:SonyCSL-Paris/LeadsheetJS#master",
      "ssh": "git@github.com:SonyCSL-Paris/LeadsheetJS.git#master",
      "sshUrl": "git+ssh://git@github.com/SonyCSL-Paris/LeadsheetJS.git#master",
      "type": "github"
    },
    "name": "LeadsheetJS",
    "raw": "LeadsheetJS@git+https://github.com/SonyCSL-Paris/LeadsheetJS.git#master",
    "rawSpec": "git+https://github.com/SonyCSL-Paris/LeadsheetJS.git#master",
    "scope": null,
    "spec": "git+https://github.com/SonyCSL-Paris/LeadsheetJS.git#master",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/SonyCSL-Paris/LeadsheetJS.git#90c31090e376df154be72ab31937c8bd0146c946",
  "_shasum": "e252d843f6c6c644375aab1cc83a3f704eb4182d",
  "_shrinkwrap": null,
  "_spec": "LeadsheetJS@git+https://github.com/SonyCSL-Paris/LeadsheetJS.git#master",
  "_where": "/home/dani/www/jekyll-sonycsl-site",
  "author": {
    "name": "Neullas, Martin"
  },
  "bugs": {
    "url": "https://github.com/SonyCSL-Paris/LeadsheetJS/issues"
  },
  "dependencies": {
    "bootstrap": "git+https://github.com/twbs/bootstrap.git#b4c4072679943773a7582daa63f545ba818fa627",
    "deep-diff": "^0.3.4",
    "jquery": "^2.2.3",
    "jspdf": "^1.2.61",
    "mustache": "^2.2.1",
    "requirejs-text": "^2.0.12",
    "underscore": "^1.8.3",
    "vexflow": "^1.2.45"
  },
  "description": "Library for editing lead sheets",
  "devDependencies": {
    "grunt": "^1.0.1",
    "grunt-amd-build": "^0.9.1",
    "grunt-contrib-clean": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-contrib-qunit": "^1.0.0",
    "grunt-contrib-requirejs": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-contrib-watch": "^1.0.0",
    "grunt-jsdoc": "^2.0.0",
    "grunt-umd": "^2.3.5"
  },
  "directories": {
    "test": "tests"
  },
  "gitHead": "90c31090e376df154be72ab31937c8bd0146c946",
  "homepage": "https://github.com/SonyCSL-Paris/LeadsheetJS#readme",
  "keywords": [
    "Leadsheet",
    "javascript",
    "audio",
    "music",
    "composition tools",
    "Sony CSL"
  ],
  "license": "MIT",
  "main": "",
  "name": "LeadsheetJS",
  "optionalDependencies": {},
  "private": false,
  "readme": "# LeadsheetJS [![Build Status](https://travis-ci.org/SonyCSL-Paris/LeadsheetJS.svg?branch=master)](https://travis-ci.org/SonyCSL-Paris/LeadsheetJS)\nA JavaScript library for online music leadsheets (visualizing, playing, editing and other features). \n2015 Daniel Martín and Timotée Neullas\n\n##Installation\nInside the LeadsheetJS folder, you need to run [npm](http://blog.npmjs.org/post/85484771375/how-to-install-npm) to get all the dependencies:\n\n    npm install --prod\n\n## How to use \nLeadsheetJS uses RequireJS, so you should have 2 script tags: \t\n```html\n<script src=\"path_to/require.js\"></script>\n<script src=\"LeadsheetJS_folder/config.js\"></script>\n```\t\nand then you can use it this way \n```javascript\nrequire.config({\n\tbaseUrl: \"path_to_your/LeadsheetJS_folder/\",\n});\nrequire(\n\t['LJS', '/absolute_path_to_song/song.js'], \n\tfunction(LeadsheetJS, song) {\n\t\t//we set the parameters\n\t\tvar params = {\n\t\t\t// minimum parameters for viewer\n\t\t\tviewer: {HTMLElement: document.getElementById('myViewerDiv')}, \n\t\t\t// minimum parameters for player\n\t\t\tplayer: {HTMLElement: document.getElementById('myPlayerDiv')}, \n\t\t\t// minimum parameters for edition (notes chords and structure are editable by default)\n\t\t\tedition: {notes: true},\n\t\t};\n\t\t// We initialise LeadsheetJS\n\t\tvar myLeadsheet = LeadsheetJS.init(song, params);\n\t\t// You are using LeadsheetJS\n\t}\n);\n```\nThe first part (require.config) defines the LeadsheetJS folder so require can resolve easily all the paths. If you wan't to use your own libraries, you need overload the paths values defined in config.js. For instance if you want to use your own version of jquery, you have to do so:\n```javascript\nrequire.config({\n\tbaseUrl: \"path_to_your/LeadsheetJS_folder/\",\n\tpaths:{\n\t\tjquery: '/my_own_absolute_path/to_my_own_jquery'\n\t}\n});\n```\nThe second part is the script that uses LeadsheetJS. Basically it takes a song in a specific JSON format (see json examples at [/tests/songs](/tests/songs).  And it sends it to `LeadsheetJS.init` together with the desired parameters. This is a simple example of a json song with 2 bars with chords `C | Am` and as a melody a whole rest and a whole note C/4.\n```javascript\nvar simpleSong = {\n\tcomposer: \"John \",\n\ttitle: \"Whatever song\",\n\ttime: \"4/4\",\n\tchanges: [{\n\t\tid: 0,\n\t\tname: \"A\",\n\t\tbars: [\n\t\t{\n\t\t\tchords: [{p: \"C\",\n\t\t\t\tch: \"\",\n\t\t\t\tbeat: 1\n\t\t\t}],\n\t\t\tmelody: [{\n\t\t\t\tkeys: [\"B/4\"],\n\t\t\t\tduration: \"wr\"\n\t\t\t}]\n\t\t},{\n\t\t\tchords: [{\n\t\t\t\tp: \"A\",\n\t\t\t\tch: \"m\",\n\t\t\t\tbeat: 1\n\t\t\t}],\n\t\t\tmelody: [{\n\t\t\t\tkeys: [\"C/4\"],\n\t\t\t\tduration: \"W\"\n\t\t\t}]\n\t\t}]\n\t}]\n};\n```\nThere examples of different configurations of LeadsheetJS in http://lsdb.flow-machines.com/leadsheetJS\n\n\nImportant: for HTML generated by LeadsheetJS to work, the document should by specified as HTML5, so tag `<!DOCTYPE html>` goes at the top of the page.\n\n## Get the code to work with\n\n### Get code and dependencies\n\nTo setup the build environments, first install NodeJS and npm.\n\n\t$ git clone _this_repository_\n\nThen, from the LeadsheetJS/ directory run:\n\n\t$ cd LeadsheetJS/\n\t$ npm install\n\t$ npm install -g grunt-cli\n\n### Build with grunt.\n\n\t$ grunt\n\nIf you are changing some files you can use grunt watch, it will build LeadsheetJS each time a file is modified.\n\n\t$ grunt watch\n\nTo run tests in the browser, open a new tab:\n - `tests/test.html` for functionnal tests\n - `tests/viewer-test.html` for visual tests\n\n You can also run the tests using cli with\n\n\t$ grunt qunit\n\nTests use RequireJS and Qunit, like in http://www.nathandavison.com/article/17/using-qunit-and-requirejs-to-build-modular-unit-tests\n\nThere are some example also in the `samples` folder.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/SonyCSL-Paris/LeadsheetJS.git"
  },
  "scripts": {
    "test": "grunt qunit"
  },
  "version": "0.1.0"
}
